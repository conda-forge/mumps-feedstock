{% set name = "mumps" %}
{% set version = "5.6.2" %}
{% set sha256 = "13a2c1aff2bd1aa92fe84b7b35d88f43434019963ca09ef7e8c90821a8f1d59a" %}

package:
  name: mumps
  version: {{ version }}

source:
  fn: MUMPS_{{ version }}.tar.gz
  url: https://graal.ens-lyon.fr/MUMPS/MUMPS_{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - shared-pord.patch
    - shared-mumps.patch
    - shared-libseq.patch
    - examples-mpilibs.patch
    - flang-support.patch
    - mumps_support_only_metis_5_1_1.patch

build:
  number: 0
  skip: true  # [win and vc<14]

requirements:
  build:
    # dummy unused top-level requirements
    # needed to construct the right conda-smithy matrix
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - m2-patch  # [win]
    - mpi * {{ mpi }}  # [mpi != 'nompi']

outputs:
  - name: mumps-include
    build:
      script: ${RECIPE_DIR}/build-headers.sh
      skip: true  # [win]
    requirements:
      build: []
      host: []
    test:
      commands:
        - test -f "${PREFIX}/include/mumps_compat.h"

  - name: mumps-seq
    build:
      script: ${RECIPE_DIR}/build-seq.sh  # [not win]
      script: "%RECIPE_DIR%\\bld-seq.bat"  # [win]
      run_exports:
        - {{ pin_subpackage('mumps-seq', max_pin='x.x.x') }}
      skip: true  # [(win and vc<14) or mpi != 'nompi']
    requirements:
      build:
        - cmake  # [win]
        - m2-patch  # [win]
        - {{ compiler('fortran') }}
        - {{ compiler('c') }}
        - make  # [unix]
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - libblas
        - liblapack
        - metis  >=5.1.1  # [not win]
        - libscotch  # [not win]
      run:
        - {{ pin_subpackage('mumps-include', max_pin='x.x.x') }}  # [not win]
        - libscotch  # [not win]

    test:
      commands:
        {% if not win %}

        {% for lib in [
          'smumps',
          'dmumps',
          'cmumps',
          'zmumps',
          'mumps_common',
          'pord',
        ] %}
        - test -f "${PREFIX}/lib/lib{{ lib }}_seq-{{ version }}${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/lib{{ lib }}_seq${SHLIB_EXT}"
        - test -h "${PREFIX}/lib/lib{{ lib }}_seq${SHLIB_EXT}"
        {% endfor %}
        - test -f "${PREFIX}/lib/libmpiseq_seq-{{ version }}${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/libmpiseq_seq${SHLIB_EXT}"
        - test -h "${PREFIX}/lib/libmpiseq_seq${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/libmpiseq${SHLIB_EXT}"
        - test -h "${PREFIX}/lib/libmpiseq${SHLIB_EXT}"
        - test -f "${PREFIX}/include/mumps_seq/mpi.h"
        - test -f "${PREFIX}/include/mumps_seq/mpif.h"
        {% else %}
        - if not exist "%LIBRARY_PREFIX%\bin\smumps.dll" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\smumps.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\dmumps.dll" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\dmumps.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\cmumps.dll" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\cmumps.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\zmumps.dll" exit 1
        - if not exist "%LIBRARY_PREFIX%\bin\zmumps.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\lib\mumps_common.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\lib\pord.lib" exit 1
        - if not exist "%LIBRARY_PREFIX%\include\dmumps_struc.h" exit 1
        - if not exist "%LIBRARY_PREFIX%\include\mumps_compat.h" exit 1
        - if not exist "%LIBRARY_PREFIX%\include\mumps_seq\mpi.h" exit 1
        - if not exist "%LIBRARY_PREFIX%\include\mumps_seq\mpif.h" exit 1
        {% endif %}

  - name: mumps-mpi
    build:
      skip: true  # [win or mpi == 'nompi']
      script: ${RECIPE_DIR}/build-mpi.sh
      run_exports:
        - {{ pin_subpackage('mumps-mpi', max_pin='x.x.x') }}  # [not win]
      features:
    requirements:
      build:
        - {{ compiler('fortran') }}
        - {{ compiler('c') }}
        - make  # [unix]
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - libblas
        - liblapack
        - {{ mpi }}
        - metis  >=5.1.1
        - parmetis
        - libptscotch
        - scalapack
        - libscotch
      run:
        - {{ pin_subpackage('mumps-include', exact=True) }}
        - {{ mpi }}
        - parmetis
        - libptscotch
        - scalapack
        - libscotch

    test:
      commands:
        {% for lib in [
          'smumps',
          'dmumps',
          'cmumps',
          'zmumps',
          'mumps_common',
          'pord',
        ] %}
        - test -f "${PREFIX}/lib/lib{{ lib }}-{{ version }}${SHLIB_EXT}"
        - test -h "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
        {% endfor %}
        - test ! -f "${PREFIX}/lib/libmpiseq*"
        - test ! -d "${PREFIX}/include/mumps_seq"

about:
  home: https://mumps-solver.org
  license: CECILL-C
  license_file: LICENSE
  summary: 'MUMPS: a parallel sparse direct solver'
  description: |
    MUMPS (MUltifrontal Massively Parallel Solver) is a package for solving
    systems of linear equations of the form Ax = b, where A is a square sparse
    matrix that can be either unsymmetric, symmetric positive definite, or
    general symmetric, on distributed memory computers. MUMPS implements a
    direct method based on a multifrontal approach which performs a Gaussian
    factorization.
  doc_url: https://mumps-solver.org/index.php?page=doc

extra:
  recipe-maintainers:
    - traversaro
    - basnijholt
    - dalcinl
    - minrk
    - jbweston
    - davidbrochart
    - SylvainCorlay
